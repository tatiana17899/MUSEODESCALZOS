@using MUSEO_DE_LOS_DESCALZOS.ViewModel
@model GuiaViewModel
@{
    ViewData["Title"] = "Listado de Guías";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<style>
    .estado-disponible {
        width: 20px;
        height: 20px;
        background-color: green;
        border-radius: 50%;
        display: inline-block;
    }
    .estado-no-disponible {
        width: 20px;
        height: 20px;
        background-color: red;
        border-radius: 50%;
        display: inline-block;
    }
</style>
<link
      rel="stylesheet"
      href="https://cdn.datatables.net/2.1.6/css/dataTables.dataTables.min.css"
/>
<div class="content flex-grow-1" id="contenido">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3">@ViewData["Title"]</h1>
        <hr>
    </div>
    <div class="card">
        <div class="card-header">
            <h5 class="card-title d-flex align-items-center">
              <i class="fa-sharp fa-solid fa-person"></i> Historial de Guías
            </h5>
        </div>
        <div class="card-body">
            <!-- Botón para abrir el modal de crear nuevo guía -->
            <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#myModal" id="btnCrear">
                Crear Nuevo Guía
            </button>
            <hr>
            <div class="container">
                <table id="guiaTable" class="table table-striped table-bordered" style="padding: 10px;">
                    <thead>
                        <tr>
                            <th>Nombres</th>
                            <th>Apellidos</th>
                            <th>Email</th>
                            <th>Tipo Pago</th>
                            <th>Sueldo</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var guia in Model.ListGuía )
                        {
                            <tr>
                                <td>@guia.Nombres</td>
                                <td>@guia.Apellidos</td>
                                <td>@guia.Email</td>
                                <td>@guia.TipPago</td>
                                <td>@guia.Sueldo</td>
                                <td>
                                    <!-- Botón para abrir el modal de editar guía -->
                                    <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#myModal" onclick="editGuia('@guia.IDGuía')">
                                        <i class="fa-solid fa-pencil"></i>
                                    </button>
                                    <form asp-action="Eliminar" asp-controller="Guia" method="post" style="display:inline;">
                                            <input type="hidden" name="id" value="@guia.IDGuía" />
                                            <button type="button" class="btn btn-danger btn-sm" onclick="confirmarEliminacion('@guia.IDGuía')">
                                                <i class="fa-solid fa-trash"></i>
                                            </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="card mt-3">
        <div class="card-header">
            <h5 class="card-title d-flex align-items-center">
              <i class="fa-sharp fa-solid fa-list-check"></i> Disponibilidad Guías
            </h5>
        </div>
        <div class="card-body">
            <div class="container">
                <table id="guiaTabletarea" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Nombres</th>
                            <th>Apellidos</th>
                            <th>Estado</th>
                            <th>Tarea</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var guia in Model.ListGuía)
                        {
                            <tr>
                                <td>@guia.Nombres</td>
                                <td>@guia.Apellidos</td>
                                <td>
                                    <span class="estado-@(guia.Disponible ? "disponible" : "no-disponible")"></span>
                                </td>
                                <td>
                                    <button type="button" class="btn btn-info btn-sm" data-bs-toggle="modal" data-bs-target="#taskModal" onclick="setGuiaId(@guia.IDGuía)">
                                        <i class="fa-solid fa-pencil"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal para Crear/Editar Guía -->
<div class="modal fade" id="myModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header" style="background-color: #1D3860; color: white;">
        <h5 class="modal-title" id="myModalLabel">Crear Guía</h5>
      </div>
      <div class="modal-body">
        <form asp-controller="Guia" asp-action="Guardar" method="post" id="formGuia">
            <input type="hidden" asp-for="FormGuia.IDGuía" id="IDGuía" />
            <div class="grid grid-cols-2 gap-4 mb-4">
                <div>
                    <label asp-for="FormGuia.Nombres" class="block text-gray-700">Nombres</label>
                    <input type="text" id="nombres" class="w-full border border-gray-300 rounded p-2" asp-for="FormGuia.Nombres">
                </div>
                <div>
                    <label asp-for="FormGuia.Apellidos" class="block text-gray-700">Apellidos</label>
                    <input type="text" id="apellidos" class="w-full border border-gray-300 rounded p-2" asp-for="FormGuia.Apellidos">
                </div>
            </div>
            <div class="mb-4">
                <label asp-for="FormGuia.Email" class="block text-gray-700">Correo</label>
                <input type="email" id="correo" class="w-full border border-gray-300 rounded p-2" asp-for="FormGuia.Email">
            </div>
            <div class="grid grid-cols-2 gap-4 mb-4">
                <div>
                    <label asp-for="FormGuia.TipPago" class="block text-gray-700">Tipo de Pago</label>
                    <input type="text" id="tipo_pago" class="w-full border border-gray-300 rounded p-2" asp-for="FormGuia.TipPago">
                </div>
                <div>
                    <label asp-for="FormGuia.Sueldo" class="block text-gray-700">Sueldo</label>
                    <input type="text" id="sueldo" class="w-full border border-gray-300 rounded p-2" asp-for="FormGuia.Sueldo">
                </div>
            </div>
           <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="confirmarGuardar()">Guardar</button>
            </div>
        </form>
      </div>
    </div>
  </div>
</div>
<!-- Modal para Asignar Tarea -->
<div class="modal fade" id="taskModal" tabindex="-1" aria-labelledby="taskModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header" style="background-color: #1D3860; color: white;">
        <h5 class="modal-title" id="taskModalLabel">Asignar Tarea</h5>
      </div>
      <div class="modal-body">
        <form id="taskForm" asp-controller="Guia" asp-action="AsignarTarea" method="post">
            <input type="hidden" id="guiaId" name="guiaId" />
            <div class="mb-3">
                <input type="hidden" id="guiaIdHidden" name="guiaId" />
                <label for="tareaDescripcion" class="form-label">Descripción de la Tarea</label>
                <input type="text" class="form-control" id="tareaDescripcion" name="descripcion" />
            </div>
            <button type="button" class="btn btn-primary" onclick="confirmarAsignarTarea()">Asignar</button>
        </form>
        <hr>
        <h5 class="card-title d-flex align-items-center">
          <i class="fa-sharp fa-solid fa-list-check"></i> Tareas Asignadas
        </h5>
        <table id="tareasTable" class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Tarea</th>
                    <th>Estado</th>
                    <th>A</th>
                </tr>
            </thead>
            <tbody id="tareasTableBody">
               
            </tbody>
        </table>
    </div>
</div>
      </div>
    </div>
  </div>
</div>
@section scripts{
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/2.1.5/js/dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
    $(document).ready(function () {
        $('#guiaTable').DataTable({
            responsive: true,
            autoWidth: false,
            lengthMenu: [3, 5, 7, 9],
            pageLength: 5
        });
        $('#guiaTabletarea').DataTable({
            lengthMenu: [3, 5, 7, 9],
            pageLength: 5
        });

        window.editGuia = function(idGuia) {
            $.ajax({
                url: '@Url.Action("GetGuiaById", "Guia")',
                type: 'GET',
                data: { id: idGuia },
                success: function (data) {
                    $('#IDGuía').val(data.idGuía);
                    $('#nombres').val(data.nombres);
                    $('#apellidos').val(data.apellidos);
                    $('#correo').val(data.email);
                    $('#tipo_pago').val(data.tipPago);
                    $('#sueldo').val(data.sueldo);
                    $('#myModalLabel').text('Editar Guía');
                },
                error: function (xhr, status, error) {
                    Swal.fire({
                        title: "Error",
                        text: "Hubo un error al obtener los datos del guía.",
                        icon: "error"
                    });
                    console.log(error);
                }
            });
        }

        $('#btnCrear').click(function() {
            $('#IDGuía').val(0);  
            $('#nombres').val('');
            $('#apellidos').val('');
            $('#correo').val('');
            $('#tipo_pago').val('');
            $('#sueldo').val('');
            $('#myModalLabel').text('Crear Guía');
        });
    });

    function confirmarGuardar() {
        Swal.fire({
            title: "¿Estás seguro?",
            text: "¡No podrás revertir esto!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Sí, guardar"
        }).then((result) => {
            if (result.isConfirmed) {
                $('#formGuia').submit();
            }
        });
    }

    function confirmarEliminacion(idGuia) {
        Swal.fire({
            title: "¿Estás seguro?",
            text: "¡No podrás revertir esto!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Sí, eliminar",
            cancelButtonText: "Cancelar"
        }).then((result) => {
            if (result.isConfirmed) {
                var form = $('<form>', {
                    'method': 'POST',
                    'action': '@Url.Action("Eliminar", "Guia")'
                }).append($('<input>', {
                    'type': 'hidden',
                    'name': 'id',
                    'value': idGuia
                }));

                $('body').append(form);
                form.submit();
            }
        });
    }
    function setGuiaId(guiaId) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("SetGuiaId", "Guia")',
            data: { IDGuía: guiaId },
            success: function (response) {
                $("#guiaId").val(guiaId);
                getTareasByGuia(guiaId);
            }
        });
    }

    function getTareasByGuia(guiaId) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetTareasByGuia", "Guia")',
            data: { guiaId: guiaId },
            success: function (response) {
                $("#tareasTableBody").empty();
                $.each(response, function (index, tarea) {
                    var row = $("<tr>");
                    row.append($("<td>" + tarea.descripcion + "</td>")); // Corrección: propiedad en minúscula
                    row.append($("<td>" + (tarea.estado ? "Completada" : "Pendiente") + "</td>")); // Corrección: propiedad en minúscula
                    row.append($("<td><button type='button' class='btn btn-danger btn-sm' onclick='eliminarTarea(" + tarea.idTarea + ")'><i class='fa-solid fa-trash'></i></button></td>"));
                    $("#tareasTableBody").append(row);
                });
            }
        });
    }

    function confirmarAsignarTarea() {
        var guiaId = $("#guiaId").val();
        var descripcion = $("#tareaDescripcion").val();
        Swal.fire({
            title: "¿Estás seguro de asignar esta tarea?",
            text: "La tarea se asignará al guía seleccionado.",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Sí, asignar"
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("AsignarTarea", "Guia")',
                    data: { guiaId: guiaId, descripcion: descripcion },
                    success: function (response) {
                        getTareasByGuia(guiaId);
                        $("#tareaDescripcion").val("");
                        Swal.fire({
                            title: "Tarea asignada con éxito!",
                            icon: "success"
                        });
                    }
                });
            }
        });
    }

    function eliminarTarea(idTarea) {
        Swal.fire({
            title: "¿Estás seguro de eliminar esta tarea?",
            text: "La tarea se eliminará permanentemente.",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Sí, eliminar"
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("EliminarTarea", "Guia")',
                    data: { idTarea: idTarea },
                    success: function (response) {
                        var guiaId = $("#guiaId").val();
                        getTareasByGuia(guiaId);
                        Swal.fire({
                            title: "Tarea eliminada con éxito!",
                            icon: "success"
                        });
                    }
                });
            }
        });
    }
</script>
}
